<?xml version="1.0" encoding="utf-8" ?>
<configuration>
	<!--注册log4net（目前注释掉也可以正常使用）-->
	<!--<configSections>
    <section name="log4net" type="log4net.Config.IgnoreSectionHandler"/>
  </configSections>-->

	<log4net>

		<!-- 日志默认值节点 -->
		<root>
			<!-- 默认日志对象级别 -->
			<!--(高) OFF > FATAL > ERROR > WARN > INFO > DEBUG > ALL (低) -->
			<level value="all" />
			<!-- 默认日志记录方式 ref为<appender>节点的name属性-->
			<appender-ref ref="MyColoredConsoleAppender"/>
		</root>

		<!-- 
    AdoNetAppender：利用ADO.NET记录到数据库的日志。
    ConsoleAppender：将日志输出到控制台。
    RollingFileAppender：将日志以回滚文件（重复操作原始文件）的形式写到文件中。
    -->
		<!-- 控制台显示日志 -->
		<appender name="MyColoredConsoleAppender" type="log4net.Appender.ColoredConsoleAppender">
			<!-- 设置不同级别控制台显示的不同颜色 -->
			<mapping>
				<level value="INFO" />
				<foreColor value="Green" />
			</mapping>
			<mapping>
				<level value="WARN" />
				<foreColor value="Yellow" />
			</mapping>
			<mapping>
				<level value="ERROR" />
				<foreColor value="Red, HighIntensity" />
			</mapping>
			<!-- 记录的格式。 -->
			<layout type="log4net.Layout.PatternLayout">
				<conversionPattern value="%date{HH:mm:ss,fff} [%-5level] %m %n" />
			</layout>
			<!-- 
      过滤器type有如下几种类型
      log4net.Filter.DenyAllFilter        丢弃所有日志事件。
      log4net.Filter.LevelMatchFilter      准确匹配事件等级。
      log4net.Filter.LevelRangeFilter      匹配一个范围的等级。
      log4net.Filter.LoggerMatchFilter    匹配一个日志器名字的开始。
      log4net.Filter.PropertyFilter        匹配指定属性名称的子字符串。
      log4net.Filter.StringMatchFilter    匹配事件消息的子字符串。
      -->
			<filter type="log4net.Filter.LevelRangeFilter">
				<!-- 控制输出日志的级别范围 -->
				<param name="LevelMin" value="Info" />
				<param name="LevelMax" value="Error" />
			</filter>
		</appender>
	</log4net>
</configuration>